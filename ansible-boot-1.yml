- hosts: localhost
  connection: local
  become: yes
  vars:
    zt_network_id: 8bd5124fd6e39fcc
    additional_pkgs:
      - neofetch
      - mtr
      - nmap
      - bpython
      # - zsh
      # - terraform
      - git
      - python3

  tasks:
    - name: Update package manager
      command: "{{ package_manager_update_command }}"
      when: ansible_os_family == "Darwin" or ansible_os_family == "Debian"
      vars:
        package_manager_update_command: "{{ 'brew update' if ansible_os_family == 'Darwin' else 'apt-get update' }}"

    - name: "Install Zerotier"
      ansible.builtin.script: curl -s https://install.zerotier.com/ | sudo bash

    - name: Join Zerotier network
      ansible.builtin.shell: zerotier-cli join {{ zt_network_id }}
      register: join_output
      ignore_errors: true
      # dependencies:
      #   - "Install Zerotier"

    - name: Debug output
      debug:
        var: join_output
      when: join_output.stdout is defined

    - name: Enable and start Zerotier service
      ansible.builtin.service:
        name: zerotier-one
        state: started
        enabled: yes

    - name: Download Terraform binary
      unarchive:
        src: https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip
        dest: /usr/local/bin
        remote_src: yes
      vars:
        terraform_version: 0.15.5

    - name: Set executable permission on Terraform binary
      file:
        path: /usr/local/bin/terraform
        mode: 0755

    - name: Install additional packages # All other packages.
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop: "{{ additional_pkgs }}"

    - name: ZSH_Installation
      package:
        name: "zsh"
        state: present

    - name: Install Oh My Zsh
      ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      dependencies:
        - ZSH_Installation

  handlers:
    - name: Reload systemctl daemon
      systemd:
        daemon_reload: yes
